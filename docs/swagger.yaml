basePath: /
definitions:
  dto.Filters:
    properties:
      group: {}
      release_date_after: {}
      release_date_before: {}
      song: {}
      text: {}
    type: object
  dto.SongRequest:
    properties:
      group:
        example: Muse
        type: string
      song:
        example: Supermassive Black Hole
        type: string
    required:
    - group
    - song
    type: object
  dto.UpdateSong:
    properties:
      group: {}
      id:
        type: integer
      patronymic: {}
      releaseDate: {}
      song: {}
      text: {}
    required:
    - id
    type: object
  models.Song:
    properties:
      group:
        type: string
      id:
        type: integer
      patronymic:
        type: string
      releaseDate:
        type: string
      song:
        type: string
      text:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server HTTP server.
  title: Mysic Library Service
  version: "1.0"
paths:
  /get:
    post:
      consumes:
      - application/json
      description: Get songs from library.
      parameters:
      - description: Song information
        in: body
        name: Filters
        required: true
        schema:
          $ref: '#/definitions/dto.Filters'
      - default: 10
        description: limit
        in: query
        name: limit
        required: true
        type: integer
      - default: 0
        description: offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            items:
              $ref: '#/definitions/models.Song'
            type: array
        "400":
          description: failure response
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: failure response
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get songs from library
      tags:
      - API
  /save:
    post:
      consumes:
      - application/json
      description: Save a new song into library.
      parameters:
      - description: Song information
        in: body
        name: SongRequest
        required: true
        schema:
          $ref: '#/definitions/dto.SongRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: failure response
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: failure response
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Save a new song
      tags:
      - API
  /song-text:
    get:
      consumes:
      - application/json
      description: Get song text
      parameters:
      - description: songID
        in: query
        name: id
        required: true
        type: integer
      - default: 1
        description: couplet
        in: query
        name: couplet
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: failure response
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: failure response
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get song text
      tags:
      - API
  /song/{id}:
    delete:
      consumes:
      - application/json
      description: Delete song
      parameters:
      - description: songID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: failure response
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: failure response
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete song
      tags:
      - API
  /update:
    patch:
      consumes:
      - application/json
      description: Update song
      parameters:
      - description: Song information
        in: body
        name: UpdateSong
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSong'
      produces:
      - application/json
      responses:
        "200":
          description: success response
          schema:
            additionalProperties: true
            type: object
        "400":
          description: failure response
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: failure response
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update song
      tags:
      - API
swagger: "2.0"
